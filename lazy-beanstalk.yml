# lazy-beanstalk.yml

## AWS Regional Configuration
aws:
  region: ${AWS_REGION}
  platform: ${LATEST_DOCKER_PLATFORM}
  tags:
    Environment: development
    Project: ${PROJECT_NAME}
    ManagedBy: deployment-scripts

## Application Configuration
application:
  name: ${PROJECT_NAME}
  environment: ${PROJECT_NAME}-env
  description: "${PROJECT_NAME} Application"

## Instance Configuration
instance:
  type: t4g.nano
  elb_type: application
  autoscaling:
    min_instances: 1
    max_instances: 1
  spot_options:
    enabled: true

## IAM Configuration
iam:
  ### Service role for Elastic Beanstalk
  service_role_name: ${PROJECT_NAME}-eb-role
  service_role_policies:
    trust_policy: eb-trust-policy.json
    managed_policies:
      - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService
      - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
  
  ### Instance profile and role for EC2 instances
  instance_profile_name: ${PROJECT_NAME}-ec2-profile
  instance_role_name: ${PROJECT_NAME}-ec2-role
  instance_role_policies:
    trust_policy: ec2-trust-policy.json
    managed_policies:
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
    #### The custom_policies section below is optional.
    #### If omitted, all JSON files in the policies/ directory 
    #### (except trust policies) will be automatically attached.
    ####
    #### To explicitly specify policies to attach, uncomment and customize:
    ####
    #### custom_policies:
    ####   - bedrock.json
    ####   - s3-access.json

## HTTPS Configuration
https:
  domain_mode: "sub"  # Options: "sub" (default), "root", "custom"
  # Only used when domain_mode is "custom"
  include_root: false  # Whether to deploy to the root domain when in custom mode
  custom_subdomains: []  # List of subdomains when in custom mode
  # Example: ["api", "admin"] would result in "api.example.com", "admin.example.com"
  ttl: 300  # Time-to-live in seconds for DNS records

## OIDC Configuration
### Required environment variables: OIDC_CLIENT_ID, OIDC_CLIENT_SECRET, OIDC_ISSUER,
### OIDC_AUTH_ENDPOINT, OIDC_TOKEN_ENDPOINT, OIDC_USERINFO_ENDPOINT
oidc:
  client_id: ${OIDC_CLIENT_ID}
  client_secret: ${OIDC_CLIENT_SECRET}
  issuer: ${OIDC_ISSUER}
  endpoints:
    authorization: ${OIDC_AUTH_ENDPOINT}
    token: ${OIDC_TOKEN_ENDPOINT}
    userinfo: ${OIDC_USERINFO_ENDPOINT}
  
  ### Default session settings
  session:
    cookie_name: federate_id_token
    timeout: 36000
    scope: openid